(function(_0x529c81,_0x2fd43e){const _0x27c32b=_0x5336,_0x4513bd=_0x529c81();while(!![]){try{const _0x3d8e23=parseInt(_0x27c32b(0x152))/0x1*(-parseInt(_0x27c32b(0x154))/0x2)+-parseInt(_0x27c32b(0x14b))/0x3+-parseInt(_0x27c32b(0x14d))/0x4+-parseInt(_0x27c32b(0x14c))/0x5+-parseInt(_0x27c32b(0x148))/0x6*(-parseInt(_0x27c32b(0x145))/0x7)+parseInt(_0x27c32b(0x153))/0x8*(-parseInt(_0x27c32b(0x147))/0x9)+parseInt(_0x27c32b(0x14e))/0xa;if(_0x3d8e23===_0x2fd43e)break;else _0x4513bd['push'](_0x4513bd['shift']());}catch(_0x1fdcb6){_0x4513bd['push'](_0x4513bd['shift']());}}}(_0x5ac4,0x6ba4b));import{Vector3,Vector2,Triangle,DoubleSide,BackSide}from'../../libs/build/three.module.js';function _0x5ac4(){const _0x2a4874=['getNormal','1vyjvyZ','147192RxGESS','993904ckSuZH','getX','34083TyDVfL','fromBufferAttribute','396XkfgbX','246fVNpcP','index','intersectTriangle','1871988TPKshg','4227920iGrzSr','1336612uJqXTz','33515190prOvfy','push','faceIndex'];_0x5ac4=function(){return _0x2a4874;};return _0x5ac4();}function _0x5336(_0x5824b4,_0x60e0eb){const _0x5ac4b4=_0x5ac4();return _0x5336=function(_0x53366d,_0x305340){_0x53366d=_0x53366d-0x144;let _0x3568ff=_0x5ac4b4[_0x53366d];return _0x3568ff;},_0x5336(_0x5824b4,_0x60e0eb);}const vA=new Vector3(),vB=new Vector3(),vC=new Vector3(),uvA=new Vector2(),uvB=new Vector2(),uvC=new Vector2(),intersectionPoint=new Vector3();function checkIntersection(_0x29128b,_0x3fd904,_0x177cd8,_0x573d5a,_0x34dd6e,_0x314c34){const _0x9aa3cc=_0x5336;let _0x35ed39;_0x314c34===BackSide?_0x35ed39=_0x29128b['intersectTriangle'](_0x573d5a,_0x177cd8,_0x3fd904,!![],_0x34dd6e):_0x35ed39=_0x29128b[_0x9aa3cc(0x14a)](_0x3fd904,_0x177cd8,_0x573d5a,_0x314c34!==DoubleSide,_0x34dd6e);if(_0x35ed39===null)return null;const _0x241815=_0x29128b['origin']['distanceTo'](_0x34dd6e);return{'distance':_0x241815,'point':_0x34dd6e['clone']()};}function checkBufferGeometryIntersection(_0x47b42c,_0x4e0766,_0x509514,_0x3c9a90,_0x56fab7,_0x3b31e0,_0x5c1ef6){const _0x40368e=_0x5336;vA[_0x40368e(0x146)](_0x4e0766,_0x3c9a90),vB[_0x40368e(0x146)](_0x4e0766,_0x56fab7),vC['fromBufferAttribute'](_0x4e0766,_0x3b31e0);const _0x4ba0ba=checkIntersection(_0x47b42c,vA,vB,vC,intersectionPoint,_0x5c1ef6);if(_0x4ba0ba){_0x509514&&(uvA[_0x40368e(0x146)](_0x509514,_0x3c9a90),uvB[_0x40368e(0x146)](_0x509514,_0x56fab7),uvC[_0x40368e(0x146)](_0x509514,_0x3b31e0),_0x4ba0ba['uv']=Triangle['getUV'](intersectionPoint,vA,vB,vC,uvA,uvB,uvC,new Vector2()));const _0x38180c={'a':_0x3c9a90,'b':_0x56fab7,'c':_0x3b31e0,'normal':new Vector3(),'materialIndex':0x0};Triangle[_0x40368e(0x151)](vA,vB,vC,_0x38180c['normal']),_0x4ba0ba['face']=_0x38180c,_0x4ba0ba[_0x40368e(0x150)]=_0x3c9a90;}return _0x4ba0ba;}function intersectTri(_0x32f66c,_0x5a002d,_0x4b13fc,_0x59120a,_0x491411){const _0x347cfd=_0x5336,_0x2c5da4=_0x59120a*0x3,_0x924adf=_0x32f66c[_0x347cfd(0x149)][_0x347cfd(0x144)](_0x2c5da4),_0x5502e3=_0x32f66c[_0x347cfd(0x149)][_0x347cfd(0x144)](_0x2c5da4+0x1),_0x270948=_0x32f66c['index'][_0x347cfd(0x144)](_0x2c5da4+0x2),_0x114e61=checkBufferGeometryIntersection(_0x4b13fc,_0x32f66c['attributes']['position'],_0x32f66c['attributes']['uv'],_0x924adf,_0x5502e3,_0x270948,_0x5a002d);if(_0x114e61){_0x114e61[_0x347cfd(0x150)]=_0x59120a;if(_0x491411)_0x491411[_0x347cfd(0x14f)](_0x114e61);return _0x114e61;}return null;}export{intersectTri};